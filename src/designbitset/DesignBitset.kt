package problems

object DesignBitset {
    class Bitset(private val size: Int) {

        private var data = MutableList((size + 63) / 64) { 0L }
        private var setBits = 0
        private var flipped = false

        private fun idx(idx: Int): Pair<Int, Int> {
            arrayOf<Int>().lastIndex
            val dataIdx = idx / 64
            val internalIdx = idx % 64
            return dataIdx to internalIdx
        }

        fun fix(idx: Int) {
            if (!flipped) fixInternal(idx) else unfixInternal(idx)
        }

        fun unfix(idx: Int) {
            if (!flipped) unfixInternal(idx) else fixInternal(idx)
        }

        fun flip() {
            flipped = !flipped
        }

        fun all(): Boolean {
            return if (!flipped) setBits == size else setBits == 0
        }

        fun one(): Boolean {
            return if (!flipped) setBits > 0 else setBits < size - 1
        }

        fun count(): Int {
            return if (!flipped) setBits else size - setBits
        }

        override fun toString(): String {
            return if (!flipped) {
                data
                    .joinToString("") { java.lang.Long.toBinaryString(it).padStart(64, '0').reversed() }
                    .substring(0 until size)
            } else {
                data
                    .joinToString("") { java.lang.Long.toBinaryString(it.inv()).padStart(64, '1').reversed() }
                    .substring(0 until size)
            }

        }

        private fun fixInternal(idx: Int) {
            val (dataIdx, internalIdx) = idx(idx)
            val currentData = data[dataIdx]
            val newData = currentData or (1L shl internalIdx)
            if (newData != currentData) setBits++
            data[dataIdx] = newData
        }

        private fun unfixInternal(idx: Int) {
            val (dataIdx, internalIdx) = idx(idx)
            val currentData = data[dataIdx]
            val newData = currentData and (1L shl internalIdx).inv()
            if (newData != currentData) setBits--
            data[dataIdx] = newData
        }
    }

    @JvmStatic
    fun main(args: Array<String>) {
        val bitset
        // fix
        // fix
        // flip
    }
}